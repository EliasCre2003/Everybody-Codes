fn required_potions(monster: &char) -> u32 {
    match monster {
        'A' => 0,
        'B' => 1,
        'C' => 3,
        'D' => 5,
        _ => 0,
    }
}

fn is_monster(monster: &char) -> bool {
    match monster {
        'A' | 'B' | 'C' | 'D' => true,
        _ => false,
    }
}

fn part1() -> u32 {
    let notes = "BBCBCCBACBCCCACACBBAAABCCAAACBACACBBAAAACACCABBABCBBAABCABCABBCABABCBBACACBBCCBBBCCBCBBCBCACABAABBABBBCCABBCAACBCACBABBCCCAAACAACABBBBACCBBAABAAABBABCAABCBABAAACCCBCABBCACCAABACCBCCBBCBCAAABBABCAABBACBAACABCABCABABABCABCBABBAAAAAACBABBBAACBCAAACACCCCBBCCABAACBCCBACBBCCACCCCAAABAABBCACCABCBCBCCBABBABBCAABCCCBACABBBCCCABBABBABAAABBACACACBBACBCACBABACAAACACACACABABBACACAAAAACBBBCBCCCAACCBABCACCABAAAAABAABBCACCBBCCBCBBCAABBACBCAACBCCBABAAAABACACBACABACACCBBCABBAAACCBCCBBCBCCCABAACCAACBCABCCACCABBBCAABCCABACACABACBBABABCBBCABAAAAABABABBCBCCBCBCCACBCCCCBBABACAACACAABCCBABBCACCBBBCCBAAAAACCBCBAACAAACBBBCACAACBCCCCBACCBCABACCCCBBBACCACCCCBBBAAACCCBCCCCBABAABBBCBCCCCCCAABCBBAACAAABCBCBBCBCABBABACCCBAABAABCABCCACBCAACAACCACCCCACBACBBCBBCCBCCACCCBCCBBACACBBABACBCBCBCCBBACCACBCAAAACBCBAAABABCCAAABCBBACBCBBBACBACAACCBCCBBCBABBCBABABBBAABABCBACABBAABACBCBAABCBABCCAAAABCCCCABBCBCAABCAAABBBACCACACBABCABACCCACACBBBAACBAACACCAAABABCCBAACBACCBCABBBBACACCBABBAAACBABABCCACABBCCABBAABCCBACCCCABBAACCCABACBAA";
    notes.chars().map(|c: char| required_potions(&c)).sum()
}

fn part2() -> u32 {
    let notes = "BCACCABDCDxCCxBxBBCADBCBBDxADDCxCCACCxAAABDDDABCCBCCCCBCDxCxBxADDADDDCADCAxAACDDCDxBDxABCABBBxCAAxCDAAxBxBABABCABDCACBxBBDBxDAxCAABDDCADDxDCACCABDDCDDABABCDCBDAxACBxADBDCxCDBBDBBDxAxxCDxCDADxCBCADAAxDBDBADDBBxADCCCBCBCDDBCCxBCDAADCABDABCDBDBCDCCBACDDDxDBBACBDAxBBDAABCADCCACAADADBCDxDCCBxCCDDDCBABBCDBDBCxADADDDCADCADDABCDBBDxDBDDDCDCBBCAADABBABBADxDADxCBBAABCDBBCDBCAACCDACBADAACAABBCxCxCCDCBCxCABADBDCCDxADDABAxDBACAADCAACBxACDCCBBCBBBCDCDCABxABBADADABCDDCDAACDCCDCBDBCxDBDBDCBDCBBCBABCDBCDBBAABAAACDBACxBCxCCBxxCBBACCBBBCBDCACCDDCxADDDDDADDCDCBCDABxAxABDCDCBDACDCAAAAxCBAAABCCCBBCCxCBDDABCBBDCCDxCBADCAAxxDDBCBDAAADDCBBDCDABDxDDADDCCBAAACDCxBCDDDDBBABADDABBDDBBDxADxCBAxAACBDBAADAABBAAABBDACADAAAxBxBCABBABBCCCCABBACDDxCxDAAADAAxACCCDBCADBDBDCBxDCAAACDDAxABCADABDCAACDDDBBDxBDDACDBBADxDCCxAAACAxAABDDABCBBDAABxBxAACBCAADxBABABCDAADBABBAACABCDBACADACBBAADCACCxADxADABDAACAxAADxACACCDABDDACDxBAxDCCCBCAAABADCABCDACABDAADxxCBDBBxDCABBCDCCCABDxDBBCCAABCADDDCxxDDxBADBDBxDCBBBDDCAxBACBDDDDCBDCDDAADBADBxDAAABAxDBBBDxCDBBABBCDABCCABAxCDCCDxCCBDCDAxABABABBBBBxABxBBDBCDBBDABACDDBBDBADxxDCxCADBBAADBBBxDBBCBDAACDDDACBDDDBxCBDCCCCCBACABAxDCCCCCBACABCxxBxCCBCCCAABDBDDCxBADBCDBCAxBADDCCCDADCCACBCAAAxACxACADAAAABCACBBxABBDBBAABACxDABBCCDCBBBBDxBBCABBCDCDBxDAACAAxxCCCBCCACBCxBDDBDAACxCBBBBDBCBBDDxBABBBCBDBxBCCCBCCxDDCDxDCADAxBDCBDCxDBADACDCxBBDBADBBCxABDxCADCDDACDBACxxACAAABAxBABBACDABDxBBCBBADBDxBABBBDxCAxDDBDCACCACAAACABCCBAADDBCAAACCCCxCBAxCCCxCDACBAxDCBCBCCDCDDADBCCCCCxCBxDDDCCDDBAAxCACDxDxDCBCxBCCDADBABBAxDDDDBCDxxCCxBBDxBBBACABCBDABDxBBDxAABABDAACACxABCDDDCAxAxDxCBDBBBCCCAACCCDDDADCxCDxBACBDBBABAACABCCDDDADxCDCCxAAAACCAxxACAxDCBCBxBBDDADDxDABBDBBxBBCDAxAAAABAADDABBDxDAxCACCAxABBCDDDxCCAxCDCDCBBCDCBxDBBBBAAxCCABDCAAABCBBDABDABDABDCADABxDAxACDAADCxCBxBBACDDBDDBBDBCDDDCCAxxACABABBxCxDBADDBAxCDxADDCACBCxDABCDBBDDDBABACAADDxDCBCAAAAADBAACDCCDADBDDCBDxADDBBAAABxCDBDADBBxBDCDADBADCxCDACDBADBCADDBxBACAAACxBCCACAAABDCAxCDBDDCDCCCAxDxCCACxAxADDAADDCBBDCDABDCDDABCCCABCDBACxBABBCBAxDABABDBBDBBxBBCDB";
    // let notes = "AxBCDDCAxD";
    let monsters: Vec<char> = notes.chars().collect();
    let mut sum = 0;
    for index in (0..monsters.len()).step_by(2) {
        let m1 = monsters.get(index).unwrap();
        let m2 = monsters.get(index + 1).unwrap();
        if is_monster(m1) && is_monster(m2) {
            sum += 2
        }
        sum += required_potions(m1) + required_potions(m2);
    }
    sum
}

fn part3() -> u32 {
    let notes = "";
    // let notes: &str = "xBxAAABCDxCC";
    let monsters: Vec<char> = notes.chars().collect();
    let mut sum = 0;
    for index in (0..monsters.len()).step_by(3) {
        let n_monsters: u32 = (0..3)
            .into_iter()
            .map(|i| {
                let monster = monsters.get(index + i).unwrap();
                sum += required_potions(monster);
                is_monster(monster) as u32
            })
            .sum();
        sum += match n_monsters {
            2 => 2,
            3 => 6,
            _ => 0
        };
    }
    sum
}

fn main() {
    println!(
        "Part 1: {}, Part 2: {}, Part 3: {}",
        part1(),
        part2(),
        part3()
    );
}
